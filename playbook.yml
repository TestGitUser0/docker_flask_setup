- name: Install Docker and deploy Flask app on AlmaLinux 9
  hosts: SecondVM
  become: yes

  vars:
    app_root: /opt/docker_flask_setup  # クローン先

  pre_tasks:
    - name: Remove podman-docker if installed
      ansible.builtin.dnf:
        name: podman-docker
        state: absent

    - name: Install dnf-plugins-core (for repository management)
      ansible.builtin.dnf:
        name: dnf-plugins-core
        state: present

    - name: Add Docker CE repository manually
      ansible.builtin.command:
        cmd: dnf config-manager --add-repo https://download.docker.com/linux/centos/7/x86_64/stable
      args:
        creates: /etc/yum.repos.d/docker-ce.repo

    - name: Install required system packages
      ansible.builtin.dnf:
        name:
          - python3
          - python3-pip
          - git
          - docker-ce
          - docker-ce-cli
          - containerd.io
        state: present
        allowerasing: true

  tasks:
    - name: Enable and start docker service
      ansible.builtin.systemd:
        name: docker
        enabled: true
        state: started

    - name: Add current user to docker group (optional)
      ansible.builtin.user:
        name: "{{ ansible_user }}"
        groups: docker
        append: yes
      when: ansible_user != "root"

    - name: Restart docker after group change (optional)
      ansible.builtin.systemd:
        name: docker
        state: restarted
      when: ansible_user != "root"

    # ここからアプリ関連
    - name: Clone Flask app repository
      ansible.builtin.git:
        repo: 'https://github.com/TestGitUser0/docker_flask_setup.git'
        dest: "{{ app_root }}"
        update: yes

    - name: Build Docker image for Flask app
      community.docker.docker_image:
        name: flaskapp
        source: build
        build:
          path: "{{ app_root }}"
        tag: latest

    - name: Stop and remove existing container if exists
      community.docker.docker_container:
        name: flaskapp
        state: absent
        force_kill: true

    - name: Run Flask app container
      community.docker.docker_container:
        name: flaskapp
        image: flaskapp:latest
        state: started
        restart_policy: always
        ports:
          - "8080:8080"

